package War;

public class Deck {

	private static final int CARDS_IN_SUIT = 13;
	private static final int NORMAL_CARDS = 9;
	private static final int MAX_CARDS = 52;
	private Card[] cards;

	Deck() {
		this.cards = new Card[MAX_CARDS];
	}

	public void generateFullDeck() {
		char startChar = '1';
		String[] numbers = { "10", "J", "Q", "K", "A" };
		String[] suits = { "Clubs", "Diamonds", "Hearts", "Spades" };

		for (int suit = 0; suit < 4; suit++) {
			for (int i = 1; i <= CARDS_IN_SUIT; i++) {
				if (i > 8) {
					this.cards[i - 1 + (CARDS_IN_SUIT * suit)] = new Card(suits[suit],
							(numbers[i - NORMAL_CARDS]), (short) i);
					continue;

				}
				this.cards[i - 1 + (CARDS_IN_SUIT * suit)] = new Card(suits[suit], ""
						+ ((char) (startChar + i)), (short) i);

			}
		}

	}

	public void showDeck() {
		for (int i = 0; i < this.cards.length; i++) {
			cards[i].showCard();
		}
	}

	public void shuffleDeck(int times) {

		if (times >= 1) {
			for (int i = 0; i <= times; i++) {
				for (int j = 0; j < cards.length; j++) {
					
					int random = (int) (Math.random() * 51);

					Card temp = this.cards[random];
					this.cards[random] = this.cards[0];
					this.cards[0] = temp;
				}
			}
		}

	}

	
}
