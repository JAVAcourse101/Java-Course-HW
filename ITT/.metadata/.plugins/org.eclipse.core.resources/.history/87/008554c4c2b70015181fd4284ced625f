package bigTable;

public class BigDatabase {
	static int cCNumber = 00100;
	static String[] serviceTypeTable;
	static String[] countryTable;
	static String[] winChanceTable;
	static String[] responseTable;
	
	int cCnumberUnique;
	int[] cCReceiveDate;
	String serviceType;
	String country;
	boolean Expedite;
	String winChance;
	int lineItemsCount;
	boolean fastTrade;
	boolean mapRequest;
	
	
	
	
	
	
	
	String response;
	int[] responseDate;
	boolean becomeAnOrder;

	public BigDatabase() {
		this.cCnumberUnique = BigDatabase.cCNumber;
		BigDatabase.cCNumber++;

		this.cCReceiveDate = this.genarateDate();
		
		this.serviceType = BigDatabase.serviceTypeTable[(int) (Math.random() * BigDatabase.serviceTypeTable.length)];
		
	    this.country = BigDatabase.countryTable[(int) (Math.random() * BigDatabase.countryTable.length)];
	    
	    this.Expedite=(int)(Math.random()*2)==1 ? true:false;
	    
	    this.winChance = BigDatabase.winChanceTable[(int) (Math.random() * BigDatabase.winChanceTable.length)];
	    
	    
	    int randomForItemsCount=(int)(Math.random()*24);
	    if (randomForItemsCount<9) {
			this.lineItemsCount=1;
		}
	    if (randomForItemsCount>8&&randomForItemsCount<17) {
			this.lineItemsCount=2;
		}
	    if (randomForItemsCount>16&&randomForItemsCount<21) {
			this.lineItemsCount=3;
		}
	    if (randomForItemsCount>20) {
			this.lineItemsCount=4;
		}
	    
	    this.fastTrade=(int)(Math.random()*2)==1 ? true:false;
	    this.mapRequest=(int)(Math.random()*2)==1 ? true:false;
	    
	}
	
	

	private int[] genarateDate() {
		int date[] = new int[3];
		date[0] = (int) (Math.random() * 30);
		date[1] = (int) (Math.random() * 12);
		date[2] = (int) (Math.random() * 26 + 1990);
		return date;
	}

	static void GenerateCountryTable() {
		BigDatabase.countryTable = new String[] { "10 Gbps eternet protected",
				"10 Gbps eternet unprotected", "10 Gbps eternet unprotected",
				"1 Gbps eternet protected", "1 Gbps eternet unprotected",
				"STM 1 SDH protected", "STM 1 SDH unprotected",
				"STM 4 SDH protected", "STM 4 SDH unprotected",
				"STM 16 SDH protected", "STM 16 SDH unprotected" };

	}

	static void GenerateServiceTypeTable() {
		BigDatabase.serviceTypeTable = new String[] { "ALB", "AND", "AUT",
				"BLR", "BEL", "BIH", "BGR", "HRV", "CYP", "CZE", "DNK", "EST",
				"FRO", "FIN", "FRA", "DEU", "GIB", "GRC", "HUN", "ISL", "IRL",
				"ITA", "LVA", "LIE", "LTU", "LUX", "MKD", "MLT", "MDA", "MCO",
				"NLD", "NOR", "POL", "PRT", "ROU", "RUS", "SMR", "SRB", "SVK",
				"SVN", "ESP", "SWE", "CHE", "UKR", "GBR", "VAT", "RSB", "IMN",
				"XKX", "MNE" };

	}
	
	static void GenerateWinChanceTable() {
		BigDatabase.winChanceTable = new String[] { "25",
				"50",
				"70",
				"80",
				"99",
				"100"};


	}
	
	static void GenerateResponseTable() {
		BigDatabase.responseTable = new String[] { "Capacity is available",
"Capacity is available with lead time",
"Capacity is not available"};


	}

}
